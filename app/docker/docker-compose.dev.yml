services:
  s3:
    image: minio/minio:latest
    ports:
      - "9000:9000"  # API port
      - "9001:9001"  # Console port
    environment:
      S3_BUCKET: ${BUCKET_NAME}
      MINIO_ROOT_USER: ${DEV_ONLY_S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${DEV_ONLY_S3_SECRET_KEY}
      MINIO_ADDRESS: ":9000"
      MINIO_CONSOLE_ADDRESS: ":9001"
    volumes:
      - volume-image-server-s3-data:/data
    entrypoint: ""  # Override the default minio entrypoint
    command: >
      sh -c '
        mkdir -p /data/${BUCKET_NAME} &&
        minio server /data --console-address ":9001" &
        MINIO_PID=$$! &&
        sleep 5 &&
        mc alias set local http://localhost:9000 ${DEV_ONLY_S3_ACCESS_KEY} ${DEV_ONLY_S3_SECRET_KEY} &&
        mc mb local/${BUCKET_NAME} -p || true &&
        trap "echo Terminating...; kill -TERM $$MINIO_PID" SIGTERM SIGINT &&
        wait $$MINIO_PID
      '
  dev:
    build: 
      context: ../
      dockerfile: ./docker/Dockerfile.devEnv
    volumes:
      - ../:/app/image-server:delegated
      - volume-pnpm-store-image-server:/app/image-server/.pnpm-store
    working_dir: /app/image-server
    ports:
      - "3000:3000"
    depends_on:
      s3:
        condition: service_started
    env_file:
      - ../.env
      - ../.env.local
      - ../.env.development
      - ../.env.development.local 
    command: bash

  iso-prod-express:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.express-prod
    ports:
      - "3000:3000"
    env_file:
      - ../.env
      - ../.env.local
      - ../.env.development
      - ../.env.development.local 
    depends_on:
      s3:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  iso-prod-lambda:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.lambda-prod
    ports:
      - "3000:8080"
    env_file:
      - ../.env
      - ../.env.local
      - ../.env.development
      - ../.env.development.local 
    depends_on:
      s3:
        condition: service_started
    # Lambda Runtime Interface Emulator (RIE) configuration
    # Do NOT set an empty entrypoint - we need to use the default Lambda entrypoint
    # but with the correct handler argument
    command: "index.handler"


volumes:
  volume-pnpm-store-image-server:
  volume-image-server-s3-data: 