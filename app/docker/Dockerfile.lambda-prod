FROM node:22-slim AS builder

# Set working directory
WORKDIR /app

RUN apt-get update \
  && apt-get install -y zip \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*

RUN npm install -g pnpm 

# Copy package files
COPY package.json pnpm-lock.yaml ./

# Install pnpm and dependencies
# ENV npm_config_arch=arm64
# ENV npm_config_platform=linux
RUN pnpm install --frozen-lockfile
# RUN pnpm rebuild sharp

# Copy source files
COPY tsconfig.json ./
COPY src ./src
COPY esbuild.lambda.js ./

# build the lambda entrypoint
RUN pnpm run build:lambda

RUN pnpm prune --prod

RUN cp -r node_modules dist/lambda/node_modules
# RUN echo '{"type":"commonjs"}' > dist/lambda/package.json

RUN cd dist/lambda && zip -r build.zip .

FROM public.ecr.aws/lambda/nodejs:22

# Set working directory to Lambda task root
WORKDIR ${LAMBDA_TASK_ROOT}

# Copy Lambda deployment contents directly
COPY --from=builder /app/dist/lambda/ ${LAMBDA_TASK_ROOT}/

ENV AWS_LAMBDA_FUNCTION_MEMORY_SIZE=2048
ENV NODE_OPTIONS="--enable-source-maps"

# Set the Lambda handler - this is used by the Lambda container's entrypoint script
CMD ["index.handler"]